# stack with only ec2 instance

# based on how many times we think the instance will have to run per quarter
  # option 1: to have instance terminate each time so bash runs everytime
  # option 2: find a way for instance to re-run userdata bash script w/o termination
#EC2InstanceRole is the parameter input we want
# Parameters:
#   EC2InstanceRoleName:
#     Type: String
#     Description: Name of the EC2 instance IAM role

Resources:
  MyIAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: 
        - 
          EC2-Instance-Role-POC-US-WEST-2

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: My EC2 instance security group
      VpcId: vpc-00b9bd3a6d70475f1
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22  # SSH port for instance management
          ToPort: 22
          CidrIp: 10.226.19.192/26

  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: subnet-09c627ce914a28786
      SecurityGroupIds:
      - !Ref MySecurityGroup
      IamInstanceProfile: !Ref MyIAMInstanceProfile
      
      #use aws s3 cp s3://bucketname/filename /path/to/file to get files from s3 and not github for csv later
      #add credential section for github
      #need secrets manager
      #IAM roles for EC2 instance secret manager
      #IAM roles for EC2 instance S3
      #IAM roles for S3 to grab from EC2 instance
      #add statement to prevent delete of S3 bucket
      #cloudwatch logs if error
        #add time for file name
        #see if his script works
        #add secret manager fo github
        #research new Rstudio AMI or ubuntu download R(check time)
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -x
          sudo apt-get update
          sudo apt install -y awscli
          sudo snap start amazon-ssm-agent
          sudo apt-get install r-base r-base-dev -y
          cd /tmp
          wget https://raw.githubusercontent.com/kpancha1/POC-test-file-R/main/testfile.R
          output=$(Rscript testfile.R)
          echo "File content:" > worked.txt
          echo "$output" >> worked.txt
          aws s3 cp worked.txt s3://csm-match-mock-data-matched/
      InstanceType: t3.micro
      AvailabilityZone: us-west-2b
      ImageId: ami-03f65b8614a860c29
      #ImageId: ami-0684f441a1af91c83
      Tags:
        - Key: Name
          Value: EC2-Instance-POC-us-west-2b

  #  #!/bin/bash -x
  #         sudo yum update -y
  #         sudo yum install -y awscli
  #         sudo systemctl start amazon-ssm-agent
  #         cd /tmp
  #         wget https://raw.githubusercontent.com/kpancha1/POC-test-file-R/main/TEST_writecsv.R
  #         output=$(Rscript TEST_writecsv.R)
  #         if [ -f "/tmp/${output}" ]; then
  #           echo "CSV file exists in the directory."
  #         else
  #           echo "CSV file does not exist in the directory."
  #         fi

    #       #!/bin/bash -x
    #       sudo apt-get update
    #       sudo apt-get install awscli
    #       sudo snap start amazon-ssm-agent
    #       cd /tmp
    #       wget https://raw.githubusercontent.com/kpancha1/POC-test-file-R/main/TEST_writecsv.R
    #       csvfilename=$(Rscript TEST_writecsv.R)
    #       if [ -f "/tmp/${csvfilename}" ]; then
    #         echo "CSV file exists in the directory."
    #       else
    #         echo "CSV file does not exist in the directory."
    #       fi