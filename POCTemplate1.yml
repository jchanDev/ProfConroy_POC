# following commands that local computer will have to run (in order)
#1. Command to create stack:
# aws cloudformation create-stack --stack-name NewStackName --template-body file://path/to/your/existing-template.yaml --region us-west-2
# 2. Command that will upload local csv file onto existing s3 bucket
# aws s3 cp /path/to/your/csvfile.csv s3://your-existing-bucket-name/csvfile.csv

# local computer will need credentials to run above

# template plans:
# 1. contains services that will run once and will stay; includes: output s3 bucket, security group, iam roles, input bucket
# 2. contains services that will run everytime; includes: ec2 instance

# to-do:
#EC2 launch role
#add a security group
#vpc and subnet id
#service catalog vpc
#multiple parameters
#parameters use default or json file in CLI

Resources:
  # Bucket policies and IAM roles
  InputS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref InputS3BucketPOC2023
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: s3:GetObject
            Resource: arn:aws:s3:::csm-match-mock-data/*
            Principal:
              Service:
                - ec2.amazonaws.com
                - lambda.amazonaws.com

  OutputS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref OutputS3BucketPOC2023
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: 
              - s3:PutObject
              - s3:GetObject
            Resource: arn:aws:s3:::csm-match-mock-data-matched/*
            Principal:
              Service:
                - ec2.amazonaws.com
                - lambda.amazonaws.com

  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EC2-Instance-Role-POC-US-WEST-2
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AWSCloudTrail_FullAccess
      Policies:
        - PolicyName: EC2S3AccessPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource:
                  - arn:aws:s3:::csm-match-mock-data/*
              - Effect: Allow
                Action: s3:PutObject
                Resource: arn:aws:s3:::csm-match-mock-data-matched/*
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                  - "secretsmanager:DescribeSecret"
                Resource: "*"

  LaunchLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Lambda-Execution-Role-POC-US-WEST-2
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaLaunchPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - arn:aws:s3:::csm-match-mock-data/*
                  - arn:aws:s3:::lambda-store-bucket-poc-2023/*
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                Resource: "*"
              - Effect: Allow
                Action: s3:PutObject
                Resource:
                  - arn:aws:s3:::csm-match-mock-data-matched/*
        - PolicyName: LaunchTemplate2Policy
          PolicyDocument:
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - ec2:DescribeInstances
                  - ec2:DescribeInstanceTypes
                  - ec2:DescribeSecurityGroups
                Resource: "*"
              - Sid: VisualEditor1
                Effect: Allow
                Action:
                  - ec2:RebootInstances
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:TerminateInstances
                  - ec2:DeleteTags
                  - ec2:MonitorInstances
                  - ec2:CreateTags
                  - ec2:RunInstances
                  - ec2:StopInstances
                  - ec2:StartInstances
                  - ec2:CreateSecurityGroup
                  - ec2:AssociateSubnetCidrBlock
                  - ec2:ApplySecurityGroupsToClientVpnTargetNetwork
                  - ec2:AssociateIamInstanceProfile
                Resource:
                  - arn:aws:ec2:*:804665673296:transit-gateway-multicast-domain/*
                  - arn:aws:ec2:*:804665673296:vpn-connection/*
                  - arn:aws:ec2:*:804665673296:capacity-reservation/*
                  - arn:aws:ec2:*:804665673296:prefix-list/*
                  - arn:aws:ec2:*:804665673296:launch-template/*
                  - arn:aws:ec2:*:804665673296:internet-gateway/*
                  - arn:aws:ec2:*:804665673296:vpc-endpoint/*
                  - arn:aws:ec2:*:804665673296:network-acl/*
                  - arn:aws:ec2:*:804665673296:traffic-mirror-filter/*
                  - arn:aws:ec2:*:804665673296:security-group-rule/*
                  - arn:aws:ec2:*:804665673296:vpc/*
                  - arn:aws:ec2::804665673296:ipam/*
                  - arn:aws:ec2:*:804665673296:transit-gateway-attachment/*
                  - arn:aws:ec2:*:804665673296:fleet/*
                  - arn:aws:ec2:*:804665673296:natgateway/*
                  - arn:aws:ec2:*:804665673296:dedicated-host/*
                  - arn:aws:ec2:*:804665673296:capacity-reservation-fleet/*
                  - arn:aws:ec2:*:804665673296:local-gateway-route-table-virtual-interface-group-association/*
                  - arn:aws:ec2:*:804665673296:route-table/*
                  - arn:aws:ec2:*:804665673296:verified-access-group/*
                  - arn:aws:ec2:*:804665673296:fpga-image/*
                  - arn:aws:ec2:*:804665673296:elastic-ip/*
                  - arn:aws:ec2:*:804665673296:network-interface/*
                  - arn:aws:ec2:*:804665673296:dhcp-options/*
                  - arn:aws:ec2:*:804665673296:vpn-gateway/*
                  - arn:aws:ec2:*:804665673296:key-pair/*
                  - arn:aws:ec2:*:804665673296:local-gateway-route-table-vpc-association/*
                  - arn:aws:ec2:*:804665673296:local-gateway/*
                  - arn:aws:ec2::804665673296:ipam-pool/*
                  - arn:aws:ec2:*:804665673296:volume/*
                  - arn:aws:ec2::804665673296:ipam-resource-discovery/*
                  - arn:aws:ec2:*:804665673296:traffic-mirror-session/*
                  - arn:aws:ec2:*:804665673296:placement-group/*
                  - arn:aws:ec2:*:804665673296:instance/*
                  - arn:aws:ec2::804665673296:ipam-resource-discovery-association/*
                  - arn:aws:ec2:*:804665673296:security-group/*
                  - arn:aws:ec2:*:804665673296:local-gateway-route-table/*
                  - arn:aws:ec2:*:804665673296:replace-root-volume-task/*
                  - arn:aws:ec2:*:804665673296:local-gateway-virtual-interface-group/*
                  - arn:aws:ec2:*:804665673296:transit-gateway-connect-peer/*
                  - arn:aws:ec2:*:804665673296:subnet/*
                  - arn:aws:ec2:*:804665673296:network-insights-access-scope-analysis/*
                  - arn:aws:ec2:*::snapshot/*
                  - arn:aws:ec2:*:804665673296:instance-event-window/*
                  - arn:aws:ec2:*:804665673296:export-image-task/*
                  - arn:aws:ec2:*:804665673296:spot-fleet-request/*
                  - arn:aws:ec2:*:804665673296:import-snapshot-task/*
                  - arn:aws:ec2:*:804665673296:client-vpn-endpoint/*
                  - arn:aws:ec2:*:804665673296:vpc-peering-connection/*
                  - arn:aws:ec2:*:804665673296:transit-gateway/*
                  - arn:aws:ec2:*:804665673296:transit-gateway-route-table-announcement/*
                  - arn:aws:ec2:*:804665673296:export-instance-task/*
                  - arn:aws:ec2:*:804665673296:verified-access-instance/*
                  - arn:aws:ec2:*:804665673296:instance-connect-endpoint/*
                  - arn:aws:ec2:*:804665673296:carrier-gateway/*
                  - arn:aws:ec2:*::image/*
                  - arn:aws:ec2:*:804665673296:ipv4pool-ec2/*
                  - arn:aws:ec2:*:804665673296:network-insights-analysis/*
                  - arn:aws:ec2:*:804665673296:import-image-task/*
                  - arn:aws:ec2:*:804665673296:transit-gateway-route-table/*
                  - arn:aws:ec2:*:804665673296:verified-access-trust-provider/*
                  - arn:aws:ec2:*:804665673296:network-insights-path/*
                  - arn:aws:ec2:*:804665673296:vpc-flow-log/*
                  - arn:aws:ec2:*:804665673296:spot-instances-request/*
                  - arn:aws:ec2:*:804665673296:network-insights-access-scope/*
                  - arn:aws:ec2:*:804665673296:transit-gateway-policy-table/*
                  - arn:aws:ec2:*:804665673296:vpc-endpoint-service/*
                  - arn:aws:ec2:*:804665673296:traffic-mirror-target/*
                  - arn:aws:ec2:*:804665673296:coip-pool/*
                  - arn:aws:ec2:*:804665673296:reserved-instances/*
                  - arn:aws:ec2:*:804665673296:customer-gateway/*
                  - arn:aws:ec2:*:804665673296:verified-access-endpoint/*
                  - arn:aws:ec2:*:804665673296:egress-only-internet-gateway/*
                  - arn:aws:ec2::804665673296:ipam-scope/*
              - Sid: VisualEditor2
                Effect: Allow
                Action:
                  - iam:CreateInstanceProfile
                  - iam:PassRole
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                  - iam:UntagInstanceProfile
                  - iam:AddRoleToInstanceProfile
                  - iam:TagInstanceProfile
                Resource:
                  - arn:aws:iam::804665673296:role/*
                  - arn:aws:iam::804665673296:instance-profile/*
                  - arn:aws:secretsmanager:*:804665673296:secret:*

  DeleteLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Lambda-Deletion-Role-POC-US-WEST-2
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaDeletePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                  Action: s3:GetObject
                  Resource:
                    - arn:aws:s3:::csm-match-mock-data-matched/*
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - cloudformation:DeleteStack
                Resource: "*"
        - PolicyName: DeleteTemplate2Policy
          PolicyDocument:
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:UnmonitorInstances
                  - ec2:TerminateInstances
                  - ec2:RevokeSecurityGroupEgress
                  - ec2:DeleteSecurityGroup
                  - ec2:ModifySecurityGroupRules
                  - ec2:StopInstances
                Resource:
                  - arn:aws:ec2:*:804665673296:security-group-rule/*
                  - arn:aws:ec2:*:804665673296:instance/*
                  - arn:aws:ec2:*:804665673296:prefix-list/*
                  - arn:aws:ec2:*:804665673296:security-group/*
              - Sid: VisualEditor1
                Effect: Allow
                Action:
                  - iam:DeleteInstanceProfile
                  - iam:GetInstanceProfile
                  - iam:RemoveRoleFromInstanceProfile
                  - iam:UntagInstanceProfile
                Resource: arn:aws:iam::804665673296:instance-profile/*

  # S3 buckets (input and output)
  InputS3BucketPOC2023: # have object (csv file) delete after we get output csv in output bucket
    Type: AWS::S3::Bucket
    Properties:
      BucketName: csm-match-mock-data
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:Put
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .csv
            Function: arn:aws:lambda:us-west-2:804665673296:function:poc_test

  OutputS3BucketPOC2023:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: csm-match-mock-data-matched
      LifecycleConfiguration:
        Rules:
          - Id: Retain3Days
            Status: Enabled
            ExpirationInDays: 3
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:Put
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .csv
            Function: arn:aws:lambda:us-west-2:804665673296:function:POC-delete-temp2